stages:
  - build
  - deploy

variables:
  DOCKER_HOST: "unix:///runner/services/docker/docker.sock"

build-rest:
  stage: build
  image: docker:24.0.7
  services:
    - name: docker:dind
      command: ["--host=tcp://0.0.0.0:2375", "--mtu=1500"]
  before_script:
    - echo $DOCKER_HUB_ACCESS_TOKEN | docker login -u ${DOCKER_HUB_USERNAME} --password-stdin
    - apk add --no-cache nodejs npm bash jq
  script:
    - cd amaterasu-rest
    - npm run docker:build
  tags:
    - docker

build-web:
  stage: build
  image: docker:24.0.7
  services:
    - name: docker:dind
      command: ["--host=tcp://0.0.0.0:2375", "--mtu=1500"]
  before_script:
    - echo $DOCKER_HUB_ACCESS_TOKEN  | docker login -u ${DOCKER_HUB_USERNAME} --password-stdin
    - apk add --no-cache nodejs npm bash jq
  script:
    - cd amaterasu-web
    - npm run docker:build
  tags:
    - docker

deploy:
  stage: deploy
  image: ubuntu:latest
  services:
    - docker:dind
  before_script:
before_script:
    - apt-get update -y
    - apt-get install -y curl docker.io
    - systemctl enable docker
    - systemctl start docker
    - curl -LO "https://dl.k8s.io/release/v1.32.2/bin/linux/amd64/kubectl"
    - chmod +x kubectl
    - mv kubectl /usr/local/bin/
    - curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
    - chmod +x minikube
    - mv minikube /usr/local/bin/
    - minikube start --driver=docker --force
    - export KUBECONFIG=$HOME/.kube/config
    - kubectl cluster-info
  script:
    - kubectl apply -f kubernetes/deployment.yaml
    - kubectl apply -f kubernetes/service.yaml
  tags:
    - docker
  dependencies:
    - build-rest
    - build-web
  when: manual
