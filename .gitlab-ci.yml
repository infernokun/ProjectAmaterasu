stages:
  - build
  - deploy

variables:
  DOCKER_HOST: "unix:///runner/services/docker/docker.sock"

build-rest:
  stage: build
  image: docker:24.0.7
  services:
    - name: docker:dind
      command: ["--host=tcp://0.0.0.0:2375", "--mtu=1500"]
  before_script:
    - echo $DOCKER_HUB_ACCESS_TOKEN | docker login -u ${DOCKER_HUB_USERNAME} --password-stdin
    - apk add --no-cache nodejs npm bash jq
  script:
    - cd amaterasu-rest
    - npm run docker:build
  tags:
    - docker

build-web:
  stage: build
  image: docker:24.0.7
  services:
    - name: docker:dind
      command: ["--host=tcp://0.0.0.0:2375", "--mtu=1500"]
  before_script:
    - echo $DOCKER_HUB_ACCESS_TOKEN  | docker login -u ${DOCKER_HUB_USERNAME} --password-stdin
    - apk add --no-cache nodejs npm bash jq
  script:
    - cd amaterasu-web
    - npm run docker:build
  tags:
    - docker

deploy:
  stage: deploy
  image: ubuntu:latest
  before_script:
    - apt-get -yq update
    - apt-get -yqq install ssh
    - install -m 600 -D /dev/null ~/.ssh/id_rsa
    - echo "$STAGE_SERVER_PRIVATE_KEY" | base64 --decode > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H "$STAGE_SERVER_HOST" > ~/.ssh/known_hosts
    - export DEPLOY_PATH="~/amaterasu"
  script:
    - ssh "$STAGE_SERVER_USER@$STAGE_SERVER_HOST" "mkdir -p $DEPLOY_PATH"
    - scp -r . "$STAGE_SERVER_USER@$STAGE_SERVER_HOST:$DEPLOY_PATH"
    - ssh "$STAGE_SERVER_USER@$STAGE_SERVER_HOST" "cd $DEPLOY_PATH && docker compose down --remove-orphans && docker compose pull && docker compose up -d"
    - ssh "$STAGE_SERVER_USER@$STAGE_SERVER_HOST" "rm -rf $DEPLOY_PATH/*"
  after_script:
    - rm -rf ~/.ssh
  tags:
    - docker
  dependencies:
    - build-rest
    - build-web
#  when: manual
