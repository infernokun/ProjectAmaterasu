management:
  endpoints:
    web:
      cors:
        allowed-methods: GET,POST,PUT,OPTIONS,DELETE
        allowed-origins: '"*"'
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
      show-components: always
      livenessState:
        enabled: true
      readinessState:
        enabled: true
  info:
    env:
      enabled: true

spring:
  datasource:
    url: jdbc:postgresql://${DB_IP}:5432/amaterasu
    username: ${DB_USER}
    password: ${DB_PASS}
  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: false

server:
  forward-headers-strategy: native
  port: 8080
  servlet:
    contextPath: /amaterasu-rest
  shutdown: graceful
  tomcat:
    internal-proxies:
      protocol-header: "X-Forwarded-Proto"
      remote-ip-header: "X-FORWARDED-FOR"
  use-forward-headers: true
  ssl:
    enabled: true
    key-store: ${KEYSTORE}
    key-store-password: ${KEYSTORE_PASSWORD}
    key-store-type: pkcs12
    key-alias: ${DB_USER}
    key-password: ${KEYSTORE_PASSWORD}

amaterasu:
  applicationName: Amaterasu
  defaultAdminUsername: admin
  defaultAdminPassword: password
  uploadDir: "${DOCKER_COMPOSE_PATH}"
  chatService: ""
  chatSocket: ""

ssl:
  keystore:
    urI: ${KEYSTORE}
    password: ${KEYSTORE_PASSWORD}
  truststore:
    uri: ${TRUSTSTORE}
    password: ${TRUSTSTORE_PASSWORD}

logging:
  level:
    org.hibernate: WARN
    org.hibernate.orm.connections.pooling: ERROR