@use "sass:map";
@use "../themes/theme-settings";
@use "color-config";

@mixin themify($themes: $themes, $where: 'inside') {
    @each $theme, $map in $themes {
        $className: '.theme-' + #{app-styles.$theme} + ' &';

        @if $where == 'parent' {
            $className: '.theme-' + #{app-styles.$theme};
        }
      
        #{$className} {
            $theme-map: () !global;
            @each $key, $submap in $map {
                $value: map.get(map.get($themes, app-styles.$theme), '#{$key}');
                $theme-map: map.merge($theme-map, ($key: $value)) !global;
            }
  
            @content;
            $theme-map: null !global;
        }
    }
}

@function themed($key) {
    @return map.get($theme-map, $key);
}

@function themeVal($theme, $key) {
    @return map.get(map.get(theme-settings.$themes, $theme), $key);
}

@mixin themifyColor($prop, $class, $color) {
    @each $theme, $map in theme-settings.$themes {
        $className: '.theme-' + #{app-styles.$theme} + ' .' + #{$prop};
        #{$className} {
            #{$class}: color-config.color($color, color-config.returnThemeVariable(app-styles.$theme));
        }
    }
}

@function themeProperty($theme, $key) {
    @return map.get(map.get(theme-settings.$themes, $theme), $key);
}
